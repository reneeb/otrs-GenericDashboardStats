=head1 NAME

GenericDashboardStats

=head1 DESCRIPTION

As of today (Aug 2012) the 7 day statistic widget for the dashboard knows only two stats: closed tickets and created tickets.

This is not enough and to add new stats to that widget or change the current ones you need programming skills.

C<GenericDashboardStats> allows to add/change stats easily with new configuration files for the SysConfig. So you can show the stats you want.

=head1 CREATE NEW STATS

To create new stats you have to add only your own configuration file. The subsequent sections show different types of stats.

=head2 The "standard" closed ticket graph

Create a file C<$OTRS_HOME/Kernel/Config/Files/XML/AnyName.xml> where "AnyName" can be whatever you want. Though I recommend to name it the same way you want to name the graph.

The XML file has this content:

  <?xml version="1.0" encoding="utf-8"?>
  <otrs_config version="2.0" init="Application">
      <Setting Name="DashboardBackend###256-GenericStats" Required="0" Valid="1">
          <Description Translatable="1">...</Description>
          <Navigation>Frontend::Agent::View::Dashboard</Navigation>
          <Value>
              <Hash>
                  <Item Key="Module">Kernel::Output::HTML::Dashboard::TicketStatsGeneric</Item>
                  <Item Key="SysConfigBase">GenericDashboardStats</Item>
                  <Item Key="Title">Generic Ticket Stats</Item>
                  <Item Key="Created">1</Item>
                  <Item Key="Closed">1</Item>
                  <Item Key="Permission">rw</Item>
                  <Item Key="Block">ContentSmall</Item>
                  <Item Key="Group"></Item>
                  <Item Key="Default">1</Item>
                  <Item Key="CacheTTL">30</Item>
                  <Item Key="Mandatory">0</Item>
              </Hash>
          </Value>
      </Setting>
  </otrs_config>

After you've saved the file, run C<perl bin/otrs.Console.pl Maint::Config::Rebuild>. 

That's it! Nothing more. That will give you the standard 7 days statistics. It defines a new Dashboard widget. What settings
can use use (beside the standard ones used for the 7 days statistics)?

=over 4

=item * SysConfigBase

This will be clear in the next section

=item * UseDate

In stock OTRS Community Edition, you'll see the weekday abbreviations on the X-axis. If you want to see the dates, you can set
I<UseDate> to 1 and then you'll see them.

=item * DateFormat

By default the dates shown use this format: I<%Y-%m-%d> which means dates are shown as I<YYYY-MM-DD>. If you want an other format,
you can define it here.

=item * ReduceXTicks

You are going to show a longer history? Then the labels on the X-axis are overlapping and you can't read them. Then set this to I<1>.

=back

But you want more, right? 

You can define your own statistics. To define which statistics is shown in one widget, you have to define what string is used to "group"
the settings in the system configuration. It's I<GenericDashboardStats> in this case. So to add a statistics with tickets
that escalated, define a new setting:

    <Setting Name="GenericDashboardStats::Stats###001-Created-Junk" Required="0" Valid="1">
        <Description Translatable="1">How many tickets were created the day in the queue Junk</Description>
        <Navigation>Stats</Navigation>
        <Value>
            <Hash>
                <Item Key="OptionKey">CreatedJunkStats</Item>
                <Item Key="type">TicketCreate</Item>
                <Item Key="label">created in Junk</Item>
            </Hash>
        </Value>
    </Setting>


Now, what does the settings mean?

=over 4

=item * OptionKey

The OptionKey is just a unique key for this graph. This is used to define the name of an other SysConfig option that defines more search parameters (see second example below).

=item * type

Define what time-parameter is used for the ticket search. You can use the following values:

=over 4

=item * TicketCreate

Tickets created on the given day.

=item * TicketClose

Tickets closed on the given day.

=item * TicketChange

Tickets changed on the given day.

=item * TicketPending

=item * TicketEscalation

=item * TicketEscalationUpdate

=item * TicketEscalationResponse

=item * TicketEscalationSolution

=item * ArticleCreate

articles created at the given day

=back

=item * color

Color of the graph.

=item * label

Mouse over label for the graph.

=back

An other example: Show graph of ticket that were created in queue "Junk"

    <Setting Name="GenericDashboardStats::Stats###001-Created-Junk" Required="0" Valid="1">
        <Description Translatable="1">How many tickets were created the day in the queue Junk</Description>
        <Navigation>Stats</Navigation>
        <Value>
            <Hash>
                <Item Key="OptionKey">CreatedJunkStats</Item>
                <Item Key="type">TicketCreate</Item>
                <Item Key="label">created in Junk</Item>
            </Hash>
        </Value>
    </Setting>
    <Setting Name="CreatedJunkStats###Queues" Required="0" Valid="1">
        <Description Translatable="1">Define the Queues the CreatedJunkStats stat is for</Description>
        <Navigation>CreatedJunkStats</Navigation>
        <Value>
            <Array>
                <Item>Junk</Item>
            </Array>
        </Value>
    </Setting>

The first I<ConfigItem> part is described above. The second one adds more search paramters. The name of the item is created by the value of I<OptionKey> in the first config option then "###" and the last part of the name is the search option. At L<http://otrs.perl-services.de/docs/otrs/rel-3_3/kernel_system_ticketsearch.html> you can see all the options for the ticket search.

=head1 REPOSITORY & BUGS

The code repository and a bugtracker are available at L<http://github.com/reneeb/otrs-GenericDashboardStats>

=head1 AUTHOR AND LICENCE

  License: AGPL

Renee Baecker C<info@perl-services.de>

